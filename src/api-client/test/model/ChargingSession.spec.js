/**
 * vcharm Driver API
 * API for Vector's vcharm electric vehicle charging application
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vector.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VcharmDriverApi);
  }
}(this, function(expect, VcharmDriverApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VcharmDriverApi.ChargingSession();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ChargingSession', function() {
    it('should create an instance of ChargingSession', function() {
      // uncomment below and update the code to test ChargingSession
      //var instance = new VcharmDriverApi.ChargingSession();
      //expect(instance).to.be.a(VcharmDriverApi.ChargingSession);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new VcharmDriverApi.ChargingSession();
      //expect(instance).to.be();
    });

    it('should have the property vehicleId (base name: "vehicleId")', function() {
      // uncomment below and update the code to test the property vehicleId
      //var instance = new VcharmDriverApi.ChargingSession();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "startTime")', function() {
      // uncomment below and update the code to test the property startTime
      //var instance = new VcharmDriverApi.ChargingSession();
      //expect(instance).to.be();
    });

    it('should have the property endTime (base name: "endTime")', function() {
      // uncomment below and update the code to test the property endTime
      //var instance = new VcharmDriverApi.ChargingSession();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instance = new VcharmDriverApi.ChargingSession();
      //expect(instance).to.be();
    });

    it('should have the property startBatteryLevel (base name: "startBatteryLevel")', function() {
      // uncomment below and update the code to test the property startBatteryLevel
      //var instance = new VcharmDriverApi.ChargingSession();
      //expect(instance).to.be();
    });

    it('should have the property endBatteryLevel (base name: "endBatteryLevel")', function() {
      // uncomment below and update the code to test the property endBatteryLevel
      //var instance = new VcharmDriverApi.ChargingSession();
      //expect(instance).to.be();
    });

    it('should have the property energyDelivered (base name: "energyDelivered")', function() {
      // uncomment below and update the code to test the property energyDelivered
      //var instance = new VcharmDriverApi.ChargingSession();
      //expect(instance).to.be();
    });

    it('should have the property cost (base name: "cost")', function() {
      // uncomment below and update the code to test the property cost
      //var instance = new VcharmDriverApi.ChargingSession();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new VcharmDriverApi.ChargingSession();
      //expect(instance).to.be();
    });

    it('should have the property chargingStationId (base name: "chargingStationId")', function() {
      // uncomment below and update the code to test the property chargingStationId
      //var instance = new VcharmDriverApi.ChargingSession();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new VcharmDriverApi.ChargingSession();
      //expect(instance).to.be();
    });

    it('should have the property chargingCurve (base name: "chargingCurve")', function() {
      // uncomment below and update the code to test the property chargingCurve
      //var instance = new VcharmDriverApi.ChargingSession();
      //expect(instance).to.be();
    });

  });

}));
