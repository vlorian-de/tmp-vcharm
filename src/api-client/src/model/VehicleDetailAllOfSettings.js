/**
 * vcharm Driver API
 * API for Vector's vcharm electric vehicle charging application
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@vector.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VehicleDetailAllOfSettingsPreferredChargingTimes from './VehicleDetailAllOfSettingsPreferredChargingTimes';

/**
 * The VehicleDetailAllOfSettings model module.
 * @module model/VehicleDetailAllOfSettings
 * @version 1.0.0
 */
class VehicleDetailAllOfSettings {
    /**
     * Constructs a new <code>VehicleDetailAllOfSettings</code>.
     * @alias module:model/VehicleDetailAllOfSettings
     */
    constructor() { 
        
        VehicleDetailAllOfSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VehicleDetailAllOfSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VehicleDetailAllOfSettings} obj Optional instance to populate.
     * @return {module:model/VehicleDetailAllOfSettings} The populated <code>VehicleDetailAllOfSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VehicleDetailAllOfSettings();

            if (data.hasOwnProperty('targetChargeLevel')) {
                obj['targetChargeLevel'] = ApiClient.convertToType(data['targetChargeLevel'], 'Number');
            }
            if (data.hasOwnProperty('preferredChargingTimes')) {
                obj['preferredChargingTimes'] = ApiClient.convertToType(data['preferredChargingTimes'], [VehicleDetailAllOfSettingsPreferredChargingTimes]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VehicleDetailAllOfSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VehicleDetailAllOfSettings</code>.
     */
    static validateJSON(data) {
        if (data['preferredChargingTimes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['preferredChargingTimes'])) {
                throw new Error("Expected the field `preferredChargingTimes` to be an array in the JSON data but got " + data['preferredChargingTimes']);
            }
            // validate the optional field `preferredChargingTimes` (array)
            for (const item of data['preferredChargingTimes']) {
                VehicleDetailAllOfSettingsPreferredChargingTimes.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} targetChargeLevel
 */
VehicleDetailAllOfSettings.prototype['targetChargeLevel'] = undefined;

/**
 * @member {Array.<module:model/VehicleDetailAllOfSettingsPreferredChargingTimes>} preferredChargingTimes
 */
VehicleDetailAllOfSettings.prototype['preferredChargingTimes'] = undefined;






export default VehicleDetailAllOfSettings;

